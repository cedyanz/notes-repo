{"version":3,"sources":["component/Note.js","component/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","Notification","message","className","baseUrl","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","axios","get","then","response","data","initialNotes","toggleImportanceOf","id","find","n","changedNote","newObject","put","noteService","returnedNote","map","catch","error","setTimeout","notesToShow","filter","Footer","style","color","fontStyle","fontSize","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","post","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"2JAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACjB,qBAAuB,iBAEzB,OACE,+BAAKH,EAAKI,QACT,yBAAQC,QAASJ,EAAjB,cAAqCC,EAArC,WCMUI,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKC,UAAU,QAAf,SACGD,K,gBCRDE,EAAU,aC2GDC,EArGH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WDTMC,IAAMC,IAAIb,GACXc,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QCWpCF,MAAK,SAAAG,GACNb,EAASa,QAEV,IAEH,IAgBMC,EAAqB,SAAAC,GACzB,IAAM5B,EAAOY,EAAMiB,MAAK,SAAAC,GAAC,OAAIA,EAAEF,KAAOA,KAChCG,EAAW,2BAAQ/B,GAAR,IAAcG,WAAYH,EAAKG,aD1BrC,SAACyB,EAAII,GAElB,OADgBX,IAAMY,IAAN,UAAaxB,EAAb,YAAwBmB,GAAMI,GAC/BT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC0BvCS,CACQN,EAAIG,GACTR,MAAK,SAAAY,GACNtB,EAASD,EAAMwB,KAAI,SAAApC,GAAI,OAAIA,EAAK4B,KAAOA,EAAK5B,EAAOmC,SAEpDE,OAAM,SAAAC,GACLnB,EAAgB,SAAD,OACJnB,EAAKI,QADD,sCAGfmC,YAAW,WACTpB,EAAgB,QACf,SASDqB,EAAcxB,EAClBJ,EACAA,EAAM6B,QAAO,SAAAzC,GAAI,OAAIA,EAAKG,aAEtBuC,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GAIN,OACE,gCACE,uCACA,cAAC,EAAD,CAAcvC,QAASW,IACvB,8BACE,yBAAQb,QAAS,kBAAMY,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGwB,EAAYJ,KAAI,SAAApC,GAAI,OACjB,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAAM0B,EAAmB3B,EAAK4B,MAF3C5B,EAAK4B,SAMlB,uBAAMmB,SA3EM,SAACC,GACfA,EAAMC,iBACN,IDfWjB,ECeLkB,EAAa,CACjB9C,QAASU,EACTqC,MAAM,IAAIC,MAAOC,cACjBlD,UAAWmD,KAAKC,SAAW,KDlBlBvB,ECsBDkB,EDrBI7B,IAAMmC,KAAK/C,EAASuB,GACrBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCqBlCF,MAAK,SAAAY,GACNtB,EAASD,EAAM6C,OAAOtB,IACtBpB,EAAW,QA+Db,UACE,uBACE2C,MAAO5C,EACP6C,SA3CiB,SAACX,GACxBY,QAAQC,IAAIb,EAAMc,OAAOJ,OACzB3C,EAAWiC,EAAMc,OAAOJ,UA2CpB,wBAAQK,KAAK,SAAb,qBAEF,cAACrB,EAAD,QCnGNsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d949a5f4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n  ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li>{note.content}\r\n     <button onClick={toggleImportance}> {label} </button>\r\n     </li>\r\n    \r\n  )\r\n}\r\n\r\nexport default Note;","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport  { \r\n  getAll, create, update \r\n}\r\n\r\n","\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport Note from './component/Note'\r\nimport Notification from './component/Notification'\r\nimport * as noteService from './services/notes'\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n      setNotes(initialNotes)\r\n    })\r\n  }, [])\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n        .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n  \r\n    noteService\r\n    .update(id, changedNote)\r\n      .then(returnedNote => {\r\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n    })\r\n    .catch(error => {\r\n      setErrorMessage(\r\n        `Note '${note.content}' was already removed from server`\r\n      )\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    })    \r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n  ? notes\r\n  : notes.filter(note => note.important)\r\n\r\n  const Footer = () => {\r\n    const footerStyle = {\r\n      color: 'green',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all' }\r\n        </button>\r\n      </div>   \r\n      <ul>\r\n        {notesToShow.map(note => \r\n            <Note\r\n              key={note.id}\r\n              note={note} \r\n              toggleImportance={() => toggleImportanceOf(note.id)}\r\n            />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>  \r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react'\r\n// import Note from './component/Note'\r\n// import Notification from './component/Notification'\r\n// import * as noteService from './services/notes'\r\n\r\n// const App = () => {\r\n//   const [notes, setNotes] = useState([])\r\n//   const [newNote, setNewNote] = useState('')\r\n//   const [showAll, setShowAll] = useState(false)\r\n//   const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n//   useEffect(() => {\r\n//     noteService\r\n//       .getAll()\r\n//       .then(initialNotes => {\r\n//       setNotes(initialNotes)\r\n//     })\r\n//   }, [])\r\n\r\n//   const addNote = (event) => {\r\n//     event.preventDefault()\r\n//     const noteObject = {\r\n//       content: newNote,\r\n//       date: new Date().toISOString(),\r\n//       important: Math.random() > 0.5,\r\n//     }\r\n\r\n//     noteService\r\n//       .create(noteObject)\r\n//         .then(returnedNote => {\r\n//         setNotes(notes.concat(returnedNote))\r\n//         setNewNote('')\r\n//       })\r\n//   }\r\n\r\n//   const toggleImportanceOf = id => {\r\n//     const note = notes.find(n => n.id === id)\r\n//     const changedNote = { ...note, important: !note.important }\r\n  \r\n//     noteService\r\n//     .update(id, changedNote)\r\n//       .then(returnedNote => {\r\n//       setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n//     })\r\n//     .catch(error => {\r\n//       setErrorMessage(\r\n//         `Note '${note.content}' was already removed from server`\r\n//       )\r\n//       setTimeout(() => {\r\n//         setErrorMessage(null)\r\n//       }, 5000)\r\n//     })    \r\n//   }\r\n\r\n//   const handleNoteChange = (event) => {\r\n//     console.log(event.target.value)\r\n//     setNewNote(event.target.value)\r\n//   }\r\n\r\n//   const notesToShow = showAll\r\n//   ? notes\r\n//   : notes.filter(note => note.important)\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Notes</h1>\r\n//       <Notification message={errorMessage} />\r\n//       <div>\r\n//         <button onClick={() => setShowAll(!showAll)}>\r\n//           show {showAll ? 'important' : 'all' }\r\n//         </button>\r\n//       </div>   \r\n//       <ul>\r\n//         {notesToShow.map(note => \r\n//             <Note\r\n//               key={note.id}\r\n//               note={note} \r\n//               toggleImportance={() => toggleImportanceOf(note.id)}\r\n//             />\r\n//         )}\r\n//       </ul>\r\n//       <form onSubmit={addNote}>\r\n//         <input\r\n//           value={newNote}\r\n//           onChange={handleNoteChange}\r\n//         />\r\n//         <button type=\"submit\">save</button>\r\n//       </form>  \r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios'\r\n// import Note from './component/Note'\r\n// import noteService from './services/notes'\r\n\r\n// const App = () => {\r\n//   const [notes, setNotes] = useState([])\r\n//   const [newNote, setNewNote] = useState('') \r\n//   const [showAll, setShowAll] = useState(true)\r\n\r\n//   useEffect(() => {\r\n//     noteService\r\n//     .getAll()\r\n//     .then(initialNotes => {\r\n//       setNotes(initialNotes)\r\n//     })\r\n//   }, [])\r\n\r\n//   console.log('render', notes.length, 'notes')\r\n\r\n//   const addNote = (event) => {\r\n//     event.preventDefault()\r\n//     const noteObject = {\r\n//       content: newNote,\r\n//       date: new Date().toISOString(),\r\n//       important: Math.random() < 0.5,\r\n      \r\n//     }\r\n\r\n//     noteService\r\n//     .create(noteObject)\r\n//     .then(returnedNote => {\r\n//       setNotes(notes.concat(returnedNote))\r\n//       setNewNote('')\r\n//     })\r\n  \r\n//   }\r\n\r\n//   const toggleImportanceOf = id => {\r\n//     const note = notes.find(n => n.id === id)\r\n//     const changedNote = { ...note, important: !note.important }\r\n  \r\n//     noteService\r\n//     .update(id, changedNote)\r\n//     .then(returnedNote => {\r\n//       setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n//     }) \r\n//     .catch(error => {\r\n//       alert(\r\n//         `the note '${note.content}' was already deleted from server`\r\n//       )\r\n//       setNotes(notes.filter(n => n.id !== id))\r\n//     })\r\n//     }\r\n\r\n//   const handleNoteChange = (event) => {\r\n//     console.log(event.target.value)\r\n//     setNewNote(event.target.value)\r\n//   }\r\n\r\n//   const notesToShow = showAll\r\n//   ? notes\r\n//   : notes.filter(note => note.important === true)\r\n\r\n  \r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Notes</h1>\r\n//       <div>\r\n//         <button onClick={() => setShowAll(!showAll)}>\r\n//           show {showAll ? 'important' : 'all' }\r\n//         </button>\r\n//       </div>\r\n//       <ul>\r\n//         {notesToShow.map(note => \r\n//           <Note \r\n//           key={note.id} note={note} \r\n//           toggleImportance={() => toggleImportanceOf(note.id)}\r\n//           />\r\n//         )}\r\n//       </ul>\r\n//       <form onSubmit={addNote}>\r\n//         <input value={newNote}\r\n//           onChange={handleNoteChange}\r\n//         />\r\n//         <button type=\"submit\">save</button>\r\n//       </form>  \r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import Person from './component/Person';\r\n// import axios from 'axios'\r\n// import noteService from './services/notes'\r\n\r\n\r\n\r\n// const App = () => {\r\n//   const [ persons, setPersons ] = useState([\r\n//     { name: 'Arto Hellas',\r\n//       number: '10',\r\n//       id: 1, }\r\n//   ]) \r\n//   const [ newName, setNewName ] = useState('')\r\n//   const [ newNumber, setNewNumber] = useState('');\r\n//   const [notes, setNotes] = useState([])\r\n\r\n\r\n//   useEffect(() => {\r\n//     noteService\r\n//       .getAll()\r\n//       .then(initialNotes => {\r\n//       setNotes(initialNotes)\r\n//     })\r\n//   }, [])\r\n \r\n\r\n//   const handleNewName = (event) => {\r\n//     console.log(event.target.value)\r\n//     setNewName(event.target.value);\r\n//   }\r\n\r\n//    const handleNewNumber = (event) => {\r\n//     console.log(event.target.value)\r\n//     setNewNumber(event.target.value)\r\n//   }\r\n\r\n//   const addForm = (event) => {\r\n//    event.preventDefault();\r\n\r\n//    const noteObject = {\r\n//     name: newName,\r\n//     number: newNumber,\r\n//     id: persons.length + 1,\r\n//   }\r\n  \r\n//   setPersons(persons.concat(noteObject))\r\n//   setNewName('')\r\n//   setNewNumber('');\r\n\r\n//   };\r\n  \r\n  \r\n  \r\n//   return (\r\n//     <div>\r\n//       <h2>Phonebook</h2>\r\n//       <form onSubmit={addForm}>\r\n//         <div>\r\n//           name: <input\r\n//            value={newName}\r\n//            onChange={handleNewName}  />\r\n//         </div>\r\n//          <div>\r\n//           number: <input\r\n//            value={newNumber}\r\n//            onChange={handleNewNumber}  />\r\n//         </div>\r\n//         <div>\r\n//           <button type=\"submit\">add</button>\r\n//         </div>\r\n//       </form>\r\n//       <h2>Contacts</h2>\r\n//       <ul>\r\n//         {persons.map(person => \r\n//             <Person key={person.id} person={person} />\r\n//         )}\r\n//       </ul>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default App\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios'\r\n// import Note from './component/Note'\r\n\r\n// const App = () => {\r\n//   const [notes, setNotes] = useState([])\r\n//   const [newNote, setNewNote] = useState('') \r\n//   const [showAll, setShowAll] = useState(true)\r\n\r\n//    const hook = () => {\r\n//     console.log('effect')\r\n//     axios\r\n//       .get('http://localhost:3001/notes')\r\n//       .then(response => {\r\n//         console.log('promise fulfilled')\r\n//         setNotes(response.data)\r\n//       })\r\n//   }\r\n//   useEffect(hook, [])\r\n\r\n//   console.log('render', notes.length, 'notes')\r\n\r\n//   const addNote = (event) => {\r\n//     event.preventDefault()\r\n//     const noteObject = {\r\n//       content: newNote,\r\n//       date: new Date().toISOString(),\r\n//       important: Math.random() < 0.5,\r\n//       id: notes.length + 1,\r\n//     }\r\n\r\n//     setNotes(notes.concat(noteObject))\r\n//   setNewNote('')\r\n//   }\r\n\r\n//   const handleNoteChange = (event) => {\r\n//     console.log(event.target.value)\r\n//     setNewNote(event.target.value)\r\n//   }\r\n\r\n//   const notesToShow = showAll\r\n//   ? notes\r\n//   : notes.filter(note => note.important === true)\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Notes</h1>\r\n//       <div>\r\n//         <button onClick={() => setShowAll(!showAll)}>\r\n//           show {showAll ? 'important' : 'all' }\r\n//         </button>\r\n//       </div>\r\n//       <ul>\r\n//         {notesToShow.map(note => \r\n//           <Note key={note.id} note={note} />\r\n//         )}\r\n//       </ul>\r\n//       <form onSubmit={addNote}>\r\n//         <input value={newNote}\r\n//           onChange={handleNoteChange}\r\n//         />\r\n//         <button type=\"submit\">save</button>\r\n//       </form>  \r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react'\r\n// import Note from './component/Note'\r\n\r\n// const App = (props) => {\r\n//   const [notes, setNotes] = useState(props.notes)\r\n//   const [newNote, setNewNote] = useState('') \r\n//   const [showAll, setShowAll] = useState(true)\r\n\r\n//   const addNote = (event) => {\r\n//     event.preventDefault()\r\n//     const noteObject = {\r\n//       content: newNote,\r\n//       date: new Date().toISOString(),\r\n//       important: Math.random() < 0.5,\r\n//       id: notes.length + 1,\r\n//     }\r\n\r\n//     setNotes(notes.concat(noteObject))\r\n//   setNewNote('')\r\n//   }\r\n\r\n//   const handleNoteChange = (event) => {\r\n//     console.log(event.target.value)\r\n//     setNewNote(event.target.value)\r\n//   }\r\n\r\n//   const notesToShow = showAll\r\n//   ? notes\r\n//   : notes.filter(note => note.important === true)\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Notes</h1>\r\n//       <div>\r\n//         <button onClick={() => setShowAll(!showAll)}>\r\n//           show {showAll ? 'important' : 'all' }\r\n//         </button>\r\n//       </div>\r\n//       <ul>\r\n//         {notesToShow.map(note => \r\n//           <Note key={note.id} note={note} />\r\n//         )}\r\n//       </ul>\r\n//       <form onSubmit={addNote}>\r\n//         <input value={newNote}\r\n//           onChange={handleNoteChange}\r\n//         />\r\n//         <button type=\"submit\">save</button>\r\n//       </form>  \r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react'\r\n// import Person from './component/Person'\r\n\r\n\r\n// const App = () => {\r\n//   const [ persons, setPersons ] = useState([\r\n//     { name: 'Arto Hellas',\r\n//       number: '10',\r\n//       id: 1, }\r\n//   ]) \r\n//   const [ newName, setNewName ] = useState('')\r\n//   const [ newNumber, setNewNumber] = useState('');\r\n \r\n\r\n//   const handleNewName = (event) => {\r\n//     console.log(event.target.value)\r\n//     setNewName(event.target.value);\r\n//   }\r\n\r\n//    const handleNewNumber = (event) => {\r\n//     console.log(event.target.value)\r\n//     setNewNumber(event.target.value)\r\n//   }\r\n\r\n//   const addForm = (event) => {\r\n//    event.preventDefault();\r\n\r\n//    const noteObject = {\r\n//     name: newName,\r\n//     number: newNumber,\r\n//     id: persons.length + 1,\r\n//   }\r\n  \r\n//   setPersons(persons.concat(noteObject))\r\n//   setNewName('')\r\n//   setNewNumber('');\r\n\r\n//   };\r\n  \r\n//   const handleSubmit = (event) => {\r\n//     const form = event.target;\r\n//     event.preventDefault();\r\n//     if (event.target.name === persons.map((person) => person.name)) {\r\n//       alert(\"Name exist\");\r\n//     }\r\n//   }   \r\n  \r\n  \r\n//   return (\r\n//     <div>\r\n//       <h2>Phonebook</h2>\r\n//       <form onSubmit={addForm}>\r\n//         <div>\r\n//           name: <input\r\n//            value={newName}\r\n//            onChange={handleNewName}  />\r\n//         </div>\r\n//          <div>\r\n//           number: <input\r\n//            value={newNumber}\r\n//            onChange={handleNewNumber}  />\r\n//         </div>\r\n//         <div>\r\n//           <button type=\"submit\">add</button>\r\n//         </div>\r\n//       </form>\r\n//       <h2>Contacts</h2>\r\n//       <ul>\r\n//         {persons.map(person => \r\n//             <Person key={person.id} person={person} />\r\n//         )}\r\n//       </ul>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default App\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import Note from './components/Note'\r\n\r\n// const Note = ({ note }) => {  //Note in separate component\r\n//   return (\r\n//     <li>{note.content}</li>\r\n//   )\r\n// }\r\n\r\n// const App = ({ notes }) => {\r\n//   return (\r\n//     <div>\r\n//       <h1>Notes</h1>\r\n//       <ul>\r\n//         {notes.map(note => \r\n//           <Note key={note.id} note={note} />\r\n//         )}\r\n//       </ul>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}